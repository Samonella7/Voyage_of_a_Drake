#textdomain wesnoth-voadar

# This file contains the wood-cutting mini-game

#IMPORTANT
# This mini_game should not be started via debug mode.
# It is tied into Frank's location closely enough that the player/tester
# should always rely on the normal way of starting the game, namely talking to Frank in the forest.

#This macro is used instead of {PLACE_IMAGE} to use halo= instead of image=
# (so the image can display over more than its one hex)
#define VOADAR_PLACE_IMAGE IMAGE X Y
	[item]
		x,y={X},{Y}
		halo={IMAGE}
	[/item]
#enddef

[event]
	name=wood_cutting_mini_game
	id=wood_cutting_mini_game
	first_time_only=no
	# First thing being first, define a helper event. Execution begins below (clearly marked).
	
	# this event animates Frank swinging his axe at a constant speed, independent of preferences->accelerated speed
	# (and hopefully? independent of the computer's processing capability?)
	# It expects $wood_cutting.vertical_direction| to be "n", or "s", and 
	# $wood_cutting.horizontal_direction| to be "e", "w", or "none", and 
	# $wood_cutting.hits| to be "yes" or "no".
	[event]
		name=swing_axe
		id=swing_axe
		first_time_only=no
		{IF_VAR wood_cutting.hits equals yes (
			[then]
				{VARIABLE wood_cutting.sound axe.ogg}
			[/then]
			[else]
				{VARIABLE wood_cutting.sound miss-1.ogg}
			[/else]
		)}
		{IF_VAR wood_cutting.vertical_direction equals n (
			[then]
				[set_variables]
					name=wood_cutting.y_offsets
					mode=replace
					[value]
						val=27
					[/value]
					[value]
						val=18
					[/value]
					[value]
						val=9
					[/value]
					[value]
						val=0
					[/value]
				[/set_variables]
			[/then]
			[else]
				[set_variables]
					name=wood_cutting.y_offsets
					mode=replace
					[value]
						val=45
					[/value]
					[value]
						val=54
					[/value]
					[value]
						val=63
					[/value]
					[value]
						val=72
					[/value]
				[/set_variables]
			[/else]
		)}
		[switch]
			variable=wood_cutting.horizontal_direction
			[case]
				value=w
				[set_variables]
					name=wood_cutting.x_offsets
					mode=replace
					[value]
						val=43
					[/value]
					[value]
						val=31
					[/value]
					[value]
						val=20
					[/value]
					[value]
						val=8
					[/value]
				[/set_variables]
				{VARIABLE wood_cutting.fl "~FL()"}
			[/case]
			[case]
				value=e
				[set_variables]
					name=wood_cutting.x_offsets
					mode=replace
					[value]
						val=65
					[/value]
					[value]
						val=77
					[/value]
					[value]
						val=88
					[/value]
					[value]
						val=100
					[/value]
				[/set_variables]
				{CLEAR_VARIABLE wood_cutting.fl}
			[/case]
			[case]
				value=none
				[set_variables]
					name=wood_cutting.x_offsets
					mode=replace
					[value]
						val=54
					[/value]
					[value]
						val=54
					[/value]
					[value]
						val=54
					[/value]
					[value]
						val=54
					[/value]
				[/set_variables]
				{CLEAR_VARIABLE wood_cutting.fl}
			[/case]
		[/switch]
		
		#1 holding still
		{REMOVE_IMAGE 12 29}
		{VOADAR_PLACE_IMAGE "blank-big.png~BLIT(units/human-peasants/carpenter.png$wood_cutting.fl|~RC(magenta>teal),54,36)" 12 29}
		# four moving out
		{REMOVE_IMAGE 12 29}
		{VOADAR_PLACE_IMAGE "blank-big.png~BLIT(units/human-peasants/carpenter-melee-1.png$wood_cutting.fl|~RC(magenta>teal),$wood_cutting.x_offsets[0].val|,$wood_cutting.y_offsets[0].val|)" 12 29}
		{REMOVE_IMAGE 12 29}
		{VOADAR_PLACE_IMAGE "blank-big.png~BLIT(units/human-peasants/carpenter-melee-2.png$wood_cutting.fl|~RC(magenta>teal),$wood_cutting.x_offsets[1].val|,$wood_cutting.y_offsets[1].val|)" 12 29}
		{REMOVE_IMAGE 12 29}
		{VOADAR_PLACE_IMAGE "blank-big.png~BLIT(units/human-peasants/carpenter-melee-3.png$wood_cutting.fl|~RC(magenta>teal),$wood_cutting.x_offsets[2].val|,$wood_cutting.y_offsets[2].val|)" 12 29}
		[sound]
			name=$wood_cutting.sound|
		[/sound]
		{REMOVE_IMAGE 12 29}
		{VOADAR_PLACE_IMAGE "blank-big.png~BLIT(units/human-peasants/carpenter-melee-4.png$wood_cutting.fl|~RC(magenta>teal),$wood_cutting.x_offsets[3].val|,$wood_cutting.y_offsets[3].val|)" 12 29}
		#four moving back, including one at home base
		{REMOVE_IMAGE 12 29}
		{VOADAR_PLACE_IMAGE "blank-big.png~BLIT(units/human-peasants/carpenter-melee-5.png$wood_cutting.fl|~RC(magenta>teal),$wood_cutting.x_offsets[2].val|,$wood_cutting.y_offsets[2].val|)" 12 29}
		{REMOVE_IMAGE 12 29}
		{VOADAR_PLACE_IMAGE "blank-big.png~BLIT(units/human-peasants/carpenter-melee-5.png$wood_cutting.fl|~RC(magenta>teal),$wood_cutting.x_offsets[1].val|,$wood_cutting.y_offsets[1].val|)" 12 29}
		{REMOVE_IMAGE 12 29}
		{VOADAR_PLACE_IMAGE "blank-big.png~BLIT(units/human-peasants/carpenter-melee-6.png$wood_cutting.fl|~RC(magenta>teal),$wood_cutting.x_offsets[0].val|,$wood_cutting.y_offsets[0].val|)" 12 29}
		{REMOVE_IMAGE 12 29}
		{VOADAR_PLACE_IMAGE "blank-big.png~BLIT(units/human-peasants/carpenter.png$wood_cutting.fl|~RC(magenta>teal),54,36)" 12 29}
	[/event]
	
	##############################################
	#### EXECUTION BEGINS HERE
	##############################################
	#### Get the two in the right spots, even if other units (animals) are in the way:
	[store_unit]
		[filter]
			[filter_location]
				x,y=12,29
				radius=2
			[/filter_location]
			side=4
		[/filter]
		variable=move_units
	[/store_unit]
	[foreach]
		array=move_units
		[do]
			{MOVE_UNIT (x,y=$this_item.x,$this_item.y) 24 15}
		[/do]
	[/foreach]
	{CLEAR_VARIABLE move_units}
	{MOVE_UNIT (id=Voadar) 14 29}
	{MOVE_UNIT (id=Frank) 12 29}
	
	#### Next, the starting dialog:
	{IF_VAR Frank.Voadar_has_cut_wood equals no (
		[then]
			{VOADAR_MESSAGE Frank (_"Splendid! Hey, let's make it a game, shall we? See, when I'm out here cutting wood, it's important to know which trees to cut. If I cut down loads of them right next to each other, it's bad for the forest. So I never cut two trees that are too close, see?")}
			{VOADAR_MESSAGE Frank (_"So the game will be to remember where I haven't cut yet. I'll start chopping away at a bunch of trees, and you have pick one from an area I haven't started in. But don't think I'll make it easy for you! And if I'm too fast, and mix you up, then I only have to pay you a little for the wood you cut, but otherwise you get a bonus!")}
			{VARIABLE Frank.Voadar_has_cut_wood yes}
		[/then]
		[else]
			{VOADAR_MESSAGE Frank (_"Splendid! You remember the rules, right?")}
			{VARIABLE Voadar.bool_message (_"Do you remember how to play this game?")}
			[fire_event]
				name=Voadar_bool_responds
			[/fire_event]
			{IF_VAR Voadar.bool_response equals yes (
				[else]
					{VOADAR_MESSAGE Frank (_"The goal is to remember where I haven't cut yet. I'll start chopping away at a bunch of trees, and you have to pick one from an area I haven't started in. If I manage to mix you up, then I'll only pay you a little for the wood you cut, but otherwise you'll get a bonus!")}
				[/else]
			)}
		[/else]
	)}
	{VOADAR_MESSAGE Frank (_"Right, so here I go!")}
	# since we'll be using fake images of Frank, remove his actual unit until the cutting is over
	{VOADAR_STORE_UNIT Frank yes}
	
	#### Now generate the swinging pattern
	# first, a random list of directions to miss in:
	{VARIABLE i 0}
	[while]
		[variable]
			name=i
			less_than=10
		[/variable]
		[do]
			[set_variable]
				name=wood_cutting.swings[$i|].dir
				rand=n,ne,nw,s,se,sw
			[/set_variable]
			[set_variable]
				name=wood_cutting.swings[$i|].hits
				value=no
			[/set_variable]
			{VARIABLE_OP i add 1}
		[/do]
	[/while]
	{CLEAR_VARIABLE i}
	# then a list of directions to hit, starting with all 6 directions:
	[set_variables]
		name=wood_cutting.hits
		[value]
			dir=n
		[/value]
		[value]
			dir=ne
		[/value]
		[value]
			dir=nw
		[/value]
		[value]
			dir=s
		[/value]
		[value]
			dir=se
		[/value]
		[value]
			dir=sw
		[/value]
	[/set_variables]
	# decide which direction will not be hit:
	[set_variable]
		name=wood_cutting.rando
		rand=0..5
	[/set_variable]
	{VARIABLE wood_cutting.correct_direction $wood_cutting.hits[$wood_cutting.rando|].dir|}
	{CLEAR_VARIABLE wood_cutting.hits[$wood_cutting.rando|]}
	# and mix the remaining hits into the list of misses:
	[for]
		array=wood_cutting.hits
		[do]
			[set_variable]
				name=wood_cutting.rando
				rand=1..$wood_cutting.swings.length|
			[/set_variable]
			{VARIABLE_OP wood_cutting.rando sub 1}
			[set_variables]
				name=wood_cutting.swings[$wood_cutting.rando|]
				mode=insert
				[value]
					dir=$wood_cutting.hits[$i|].dir|
				[/value]
			[/set_variables]
			[set_variable]
				name=wood_cutting.swings[$wood_cutting.rando|].hits
				value=yes
			[/set_variable]
		[/do]
	[/for]
	
	#### Now animate each swing, using the helper event defined at the top of the minigame
	[for]
		array=wood_cutting.swings
		[do]
			{VARIABLE wood_cutting.hits $wood_cutting.swings[$i|].hits|}
			[switch]
				variable=wood_cutting.swings[$i|].dir
				[case]
					value=n
					{VARIABLE wood_cutting.vertical_direction n}
					{VARIABLE wood_cutting.horizontal_direction none}
				[/case]
				[case]
					value=ne
					{VARIABLE wood_cutting.vertical_direction n}
					{VARIABLE wood_cutting.horizontal_direction e}
				[/case]
				[case]
					value=nw
					{VARIABLE wood_cutting.vertical_direction n}
					{VARIABLE wood_cutting.horizontal_direction w}
				[/case]
				[case]
					value=s
					{VARIABLE wood_cutting.vertical_direction s}
					{VARIABLE wood_cutting.horizontal_direction none}
				[/case]
				[case]
					value=se
					{VARIABLE wood_cutting.vertical_direction s}
					{VARIABLE wood_cutting.horizontal_direction e}
				[/case]
				[case]
					value=sw
					{VARIABLE wood_cutting.vertical_direction s}
					{VARIABLE wood_cutting.horizontal_direction w}
				[/case]
			[/switch]
			[fire_event]
				name=swing_axe
			[/fire_event]
			[delay]
				time=3
			[/delay]
		[/do]
	[/for]
	
	####Animation is finished, time for your choice:
	# Frank finishes the instructions
	{REMOVE_IMAGE 12 29}
	[unstore_unit]
		variable=Frank.unit
	[/unstore_unit]
	{VOADAR_MESSAGE Frank (_"All right, make your guess! Move to the area you think I never actually cut in.")}
	# and decide which is the correct tile
	[switch]
		variable=wood_cutting.correct_direction
		[case]
			value=n
			{VARIABLE wood_cutting.correct_x 12}
			{VARIABLE wood_cutting.correct_y 28}
		[/case]
		[case]
			value=ne
			{VARIABLE wood_cutting.correct_x 13}
			{VARIABLE wood_cutting.correct_y 29}
		[/case]
		[case]
			value=nw
			{VARIABLE wood_cutting.correct_x 11}
			{VARIABLE wood_cutting.correct_y 29}
		[/case]
		[case]
			value=s
			{VARIABLE wood_cutting.correct_x 12}
			{VARIABLE wood_cutting.correct_y 30}
		[/case]
		[case]
			value=se
			{VARIABLE wood_cutting.correct_x 13}
			{VARIABLE wood_cutting.correct_y 30}
		[/case]
		[case]
			value=sw
			{VARIABLE wood_cutting.correct_x 11}
			{VARIABLE wood_cutting.correct_y 30}
		[/case]
	[/switch]
	# make sure Voadar has just enough moves to reach any of the possible tiles
	[modify_unit]
		[filter]
			id=Voadar
		[/filter]
		moves=3
	[/modify_unit]
	# Now control returns to Voadar. your next movement will fire one of the following events:
	# (unless you end turn without moving, which also fires one)
	
	[event]
		name=moveto
		id=wood_cutting_voadar_guesses_wrong
		[filter]
			id=Voadar
			[filter_location]
				x,y=12,29
				radius=1
			[/filter_location]
			[not]
				x,y=$wood_cutting.correct_x|,$wood_cutting.correct_y|
			[/not]
		[/filter]
		{VARIABLE wood_cutting.tried yes}
		{VARIABLE wood_cutting.correct no}
		[fire_event]
			name=wood_cutting_finish_up
		[/fire_event]
	[/event]
	[event]
		name=moveto
		id=wood_cutting_voadar_wild_guess
		[filter]
			id=Voadar
			[not]
				[filter_location]
					x,y=12,29
					radius=1
				[/filter_location]
			[/not]
		[/filter]
		{VARIABLE wood_cutting.tried no}
		[fire_event]
			name=wood_cutting_finish_up
		[/fire_event]
	[/event]
	[event]
		name=side turn end
		id=wood_cutting_voadar_does_not_guess
		{VARIABLE wood_cutting.tried no}
		[fire_event]
			name=wood_cutting_finish_up
		[/fire_event]
	[/event]
	[event]
		name=moveto
		id=wood_cutting_voadar_guesses_right
		[filter]
			id=Voadar
			x,y=$wood_cutting.correct_x|,$wood_cutting.correct_y|
		[/filter]
		{VARIABLE wood_cutting.tried yes}
		{VARIABLE wood_cutting.correct yes}
		[fire_event]
			name=wood_cutting_finish_up
		[/fire_event]
	[/event]
	
	# regardless of where you move (in other words, regardless of which of the 4 above events fires)
	# this event will be needed to end the mini-game
	[event]
		name=wood_cutting_finish_up
		id=wood_cutting_finish_up
		{IF_VAR wood_cutting.tried equals yes (
			[then]
				[animate_unit]
					flag=attack
					[filter]
						id=Voadar
					[/filter]
					[primary_attack]
						range=melee
					[/primary_attack]
					hits=yes
					[facing]
						[filter]
							id=Frank
						[/filter]
					[/facing]
				[/animate_unit]
				
				{IF_VAR wood_cutting.correct equals yes (
					[then]
						{VOADAR_MESSAGE Frank (_"Ah, I thought I had you for sure! Well, here's your $d|three$b| gold coins. We should have a re-match sometime.")}
						[gold]
							side=1
							amount=3
						[/gold]
						{VARIABLE_OP Frank.wood_cutting_wins add 1}
						[switch]
							variable=Frank.wood_cutting_wins
							[case]
								value=3
								{VOADAR_MESSAGE_NARRATOR (_"Even though Frank can't always fool you, he still moves impressively quickly through the rough terrain. After spending this much time closely watching him do so, you've observed the way he pivots his legs to move quickly, and learned something from it yourself. Your movement speed increases by one! But perhaps you could do even better...")}
								[modify_unit]
									[filter]
										id=Voadar
									[/filter]
									[effect]
										apply_to=movement
										increase=1
									[/effect]
									[effect]
										apply_to=vision
										increase=1
									[/effect]
								[/modify_unit]
							[/case]
							[case]
								value=6
								{VOADAR_MESSAGE_NARRATOR (_"After spending a few more hours with Frank, his fast, precise movements have rubbed off on you even more. Movement speed increases by one!")}
								[modify_unit]
									[filter]
										id=Voadar
									[/filter]
									[effect]
										apply_to=movement
										increase=1
									[/effect]
									[effect]
										apply_to=vision
										increase=1
									[/effect]
								[/modify_unit]
							[/case]
							[case]
								value=15
								{VOADAR_MESSAGE_NARRATOR (_"By now, you've spent so much time watching Frank slip through the trees that it's no challenge to keep up with him; your eyes dart from one direction to another faster than ever before, and you can run and fly as quickly as you will ever be able to! Movement speed increases by 1! There is nothing more you can learn from watching Frank, however.")}
								[modify_unit]
									[filter]
										id=Voadar
									[/filter]
									[effect]
										apply_to=movement
										increase=1
									[/effect]
									[effect]
										apply_to=vision
										increase=1
									[/effect]
								[/modify_unit]
							[/case]
						[/switch]
					[/then]
					[else]
						{VOADAR_MESSAGE Frank (_"Sorry, looks like I fooled you this time! Do it again sometime? Oh, and take this coin for your time.")}
						[gold]
							side=1
							amount=1
						[/gold]
					[/else]
				)}
		
				# Voadar moves a little ways off and loses movement, so you can only play the game once per turn
				{MOVE_UNIT (id=Voadar) 14 29}
				[modify_unit]
					[filter]
						id=Voadar
					[/filter]
					moves=0
				[/modify_unit]
			[/then]
			[else]
				{VOADAR_MESSAGE Frank (_"Huh? What are you doing? Giving up? Oh well, maybe you'll try it again sometime?")}
				# the message is all you get, no gold or anything
			[/else]
		)}
		
		# we're finished, only thing left to do is clean up
		{CLEAR_VARIABLE wood_cutting}
		{VOADAR_REMOVE_EVENT swing_axe}
		{VOADAR_REMOVE_EVENT wood_cutting_voadar_guesses_right}
		{VOADAR_REMOVE_EVENT wood_cutting_voadar_guesses_wrong}
		{VOADAR_REMOVE_EVENT wood_cutting_voadar_wild_guess}
		{VOADAR_REMOVE_EVENT wood_cutting_voadar_does_not_guess}
	[/event]
[/event]


