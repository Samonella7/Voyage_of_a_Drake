#textdomain wesnoth-voadar

# The underscore in this file's name (hopefully) makes this file get processed before the others
# so these macros are available in them
# though i generally try to only rely on these in the units and scenario

#Shortcut for side definitions
#define VOADAR_SIDE_BASICS
	no_leader=yes
	persistent=no
	share_vision=no
	defeat_condition=never
	income=-2
	village_gold=0
	village_support=1000
	hidden=yes
#enddef

# storing units (which I do an awful lot)
#define VOADAR_STORE_UNIT ID KILL
	[store_unit]
		[filter]
			id={ID}
		[/filter]
		variable={ID}.unit
		kill={KILL}
	[/store_unit]
#enddef
# no macro for unstoring, it is smaller and I don't always do the same tags (x,y, find_vacant, etc)

#define VOADAR_WEAPON_SPECIAL_POISON
    # Copy of the mainline poison, only 1 difference:
	# the description says that poisoned units only lose 3 hp per turn. 
	# strangely, poison doesn't work in my campaign (perhaps due to unhealable=yes?) so I apply
	# the effect manually in an event. Otherwise, this ability would still do 8 per turn, not the desired 3.
    [poison]
        id=poison
        name= _ "poison"
        description= _ "This attack poisons living targets. Poisoned units lose 3 HP every turn until they are cured or are reduced to 1 HP. Poison cannot, of itself, kill a unit."
    [/poison]
#enddef

# Shortcut for event condition filters
#define VOADAR_FILTER_VARIABLE NAME VALUE
	[filter_condition]
		[variable]
			name={NAME}
			equals={VALUE}
		[/variable]
	[/filter_condition]
#enddef

# Shortcut for testing Voadar's gold amount
# {WML} should include its own [then] and [else] tags
#define VOADAR_IF_GOLD AMOUNT WML
	[store_gold]
		side=1
		variable=Voadar.gold
	[/store_gold]
	[if]
		[variable]
			name=Voadar.gold
			greater_than_equal_to={AMOUNT}
		[/variable]
		{WML}
	[/if]
#enddef

# Short cut for removing events
# This is important due to the sheer number of events used in 2_Scenario
#define VOADAR_REMOVE_EVENT EVENT_ID
	[event]
		id={EVENT_ID}
		remove=yes
	[/event]
#enddef

# Shortcut for messages
#define VOADAR_MESSAGE SPEAKER VOADAR_MESSAGE
    [message]
        speaker={SPEAKER}
        message={VOADAR_MESSAGE}
    [/message]
#enddef

# One more message shortcut
#define VOADAR_MESSAGE_NARRATOR VOADAR_MESSAGE
    [message]
        speaker=narrator
        image="wesnoth-icon.png"
        message={VOADAR_MESSAGE}
    [/message]
#enddef

# Shortcut for placing labels
#define VOADAR_LABEL X Y TEXT
    [label]
		x,y={X},{Y}
		text={TEXT}
		visible_in_fog=no
	[/label]
#enddef

# Shortcut for chests you can rob
#define VOADAR_CHEST X Y VALUE
	# if you move there while someone is watching:
	[event]
		name=moveto
		id=notice_chest_at_{X}_{Y}
		first_time_only=yes
		[filter]
			id=Voadar
			x,y={X},{Y}
		[/filter]
		[filter_condition]
			[have_unit]
				side=2
				[not]
					type=Cow,Cart,Horse
				[/not]
				[filter_vision]
					visible=yes
					side=1
				[/filter_vision]
			[/have_unit]
		[/filter_condition]
		{VOADAR_MESSAGE_NARRATOR (_"It looks like the owner of this chest keeps some valuable things in it, so you'd better leave it alone.

...Or at least leave it alone while anyone is watching.")}
	[/event]
	#But if no one is there to stop you:
	[event]
		name=moveto
		id=rob_chest_at_{X}_{Y}
		first_time_only=no
		[filter]
			id=Voadar
			x,y={X},{Y}
		[/filter]
		[filter_condition]
			[have_unit]
				side=2
				[not]
					type=Cow,Cart,Horse
				[/not]
				[filter_vision]
					visible=yes
					side=1
				[/filter_vision]
				count=0
			[/have_unit]
		[/filter_condition]
		[message]
			speaker=narrator
			image=wesnoth-icon.png
			message=_"It looks like the owner of this chest keeps some valuable things in it, so you'd better leave it alone.

...But then again, no one is watching..."
			[option]
				label=_"Rob the chest"
				[command]
					{VOADAR_MESSAGE_NARRATOR (_"Cadameron would be ashamed of you, but you steal a chestful of {VALUE} valuables!")}
					{VARIABLE_OP Voadar.stolen_goods.{VALUE} add 1}
					{VARIABLE Voadar.inventory.stolen_goods yes}
					# this chest is now empty:
					{VOADAR_REMOVE_EVENT rob_chest_at_{X}_{Y}}
					{VOADAR_REMOVE_EVENT notice_chest_at_{X}_{Y}}
					[store_locations]
						x,y={X},{Y}
						variable=chest_temp_loc
					[/store_locations]
					[terrain]
						x,y={X},{Y}
						layer=overlay
						terrain=^Ycsb
					[/terrain]
					{CLEAR_VARIABLE chest_temp_loc}
				[/command]
			[/option]
			[option]
				label=_"Leave the chest alone"
			[/option]
		[/message]
	[/event]
#enddef


# an animation tool (so far as I know, only used in the proceeding macro)
#define VOADAR_FRAME IMAGE X Y
	[remove_item]
		x,y={X},{Y}
	[/remove_item]
	[item]
		x,y={X},{Y}
		halo={IMAGE}
	[/item]
	[redraw]
	[/redraw]
#enddef

# an explosion animation for cutscenes
#define VOADAR_EXPLOSION X Y
	[sound]
		name=fire.wav
	[/sound]
	{VOADAR_FRAME projectiles/fireball-impact-1.png  {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-2.png  {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-3.png  {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-4.png  {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-5.png  {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-6.png  {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-7.png  {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-8.png  {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-9.png  {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-10.png {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-11.png {X} {Y}}
	{VOADAR_FRAME projectiles/fireball-impact-12.png {X} {Y}}
	[remove_item]
		x,y={X},{Y}
	[/remove_item]
#enddef
