#textdomain wesnoth-voadar

# This file contains the gladiator arena

[event]
	name=prestart
	id=gladiating_prepare_variables
	{VARIABLE gladiating.wins 0}
	# unfortunately, to make conversation options work we have to load in all the gladiators' events from the very start
	#define VOADAR_LOAD_UNIT TYPE
		{NOTRAIT_UNIT 3 {TYPE} 4 43}
		[kill]
			x,y=4,43
			animate=no
			fire_event=no
		[/kill]
	#enddef
	{VOADAR_LOAD_UNIT "Elvish Gladiator"}
	{VOADAR_LOAD_UNIT "Orcish Gladiator"}
	{VOADAR_LOAD_UNIT "Gladiator Ogre"}
	{VOADAR_LOAD_UNIT "Dwarvish Gladiator"}
	{VOADAR_LOAD_UNIT "Nagini Gladiator"}
	{VOADAR_LOAD_UNIT "Gladiator Mage"}
	{VOADAR_LOAD_UNIT "Saurian Gladiator"}
	{VOADAR_LOAD_UNIT "Outlaw Gladiator"}
	{VOADAR_LOAD_UNIT "Human Gladiator"}
	{VOADAR_LOAD_UNIT "Troll Gladiator"}
	{VOADAR_LOAD_UNIT "Thunder Gladiator"}
	{VOADAR_LOAD_UNIT "Goblin Gladiator"}
	{VOADAR_LOAD_UNIT "Berserker Gladiator"}
	{VOADAR_LOAD_UNIT "Gladiator Wose"}
	{VOADAR_LOAD_UNIT "Gryphon Gladiator"}
	{VOADAR_LOAD_UNIT "Armored Gladiator"}
	#undef VOADAR_LOAD_UNIT
[/event]
# also, get the first day's set of gladiators out:
[event]
	name=turn 1
	id=gladiating_prepare_gladiators
	[fire_event]
		id=gladiating_new_schedule
	[/fire_event]
[/event]
[event]
	name=victory
	id=gladiating_clear_variables
	{CLEAR_VARIABLE gladiating}
[/event]

[event]
	name=voadar_new_schedule
	id=gladiating_new_schedule
	first_time_only=no
	# every day/night you get a new set of random gladiator options
	[kill]
		side=2
		[filter_location]
			x,y=4,43
			[or]
				x,y=5,44
			[/or]
			[or]
				x,y=6,44
			[/or]
			[or]
				x,y=7,45
			[/or]
		[/filter_location]
		animate=no
		fire_event=no
	[/kill]
	[if]
		[have_unit]
			id=Voadar
			[filter_location]
				x,y=4,43
				[or]
					x,y=5,44
				[/or]
				[or]
					x,y=6,44
				[/or]
				[or]
					x,y=7,45
				[/or]
			[/filter_location]
		[/have_unit]
		[then]
			{MOVE_UNIT (id=Voadar) 5 45}
		[/then]
	[/if]
	
	# to select the allowed gladiators, search the list of all options, and make a new list
	#   containing only the ones with low enough difficulty
	{CLEAR_VARIABLE gladiating.short_list}
	[for]
		array=gladiating.full_list
		[do]
			{IF_VAR gladiating.full_list[$i|].difficulty less_than_equal_to $gladiating.wins| (
				[then]
					{VARIABLE gladiating.temp_idx $gladiating.short_list.length|}
					{VARIABLE gladiating.short_list[$gladiating.temp_idx|].type $gladiating.full_list[$i|].type|}
					{VARIABLE gladiating.short_list[$gladiating.temp_idx|].id $gladiating.full_list[$i|].id|}
				[/then]
			)}
		[/do]
	[/for]
	# there is only room for four random gladiators at a time, so trim the short_list further if necessary:
	[while]
		[variable]
			name=gladiating.short_list.length
			greater_than=4
		[/variable]
		[do]
			[set_variable]
				name=gladiating.temp_idx
				rand=1..$gladiating.short_list.length
			[/set_variable]
			{VARIABLE_OP gladiating.temp_idx sub 1}
			{CLEAR_VARIABLE gladiating.short_list[$gladiating.temp_idx|]}
		[/do]
	[/while]
	
	# now place the units, keeping in mind that there might not be all four options:
	{IF_VAR gladiating.short_list.length greater_than 0 (
		[then]
			{NAMED_NOTRAIT_UNIT 2 $gladiating.short_list[0].type| 7 45 $gladiating.short_list[0].id| $gladiating.short_list[0].id|}
		[/then]
	)}
	{IF_VAR gladiating.short_list.length greater_than 1 (
		[then]
			{NAMED_NOTRAIT_UNIT 2 $gladiating.short_list[1].type| 5 44 $gladiating.short_list[1].id| $gladiating.short_list[1].id|}
		[/then]
	)}
	{IF_VAR gladiating.short_list.length greater_than 2 (
		[then]
			{NAMED_NOTRAIT_UNIT 2 $gladiating.short_list[2].type| 6 44 $gladiating.short_list[2].id| $gladiating.short_list[2].id|}
		[/then]
	)}
	{IF_VAR gladiating.short_list.length greater_than 3 (
		[then]
			{NAMED_NOTRAIT_UNIT 2 $gladiating.short_list[3].type| 4 43 $gladiating.short_list[3].id| $gladiating.short_list[3].id|}
		[/then]
	)}
[/event]

# though the unit file's contain code in an init_battle event for actually 
# starting the battle, this event should also fire, making message that always plays
# and removing the event that ends the game if Voadar dies
# and takes away your items (healing during a match is cheating)
[event]
	name=init_battle
	id=gladiator_battle_start
	first_time_only=no
	[place_shroud]
	[/place_shroud]
	{TELEPORT_UNIT (id=Voadar) 84 35}
	{SCROLL_TO 84 35}
	[fire_event]
		name=exit_area
		# this takes away the infinite moves that Voadar normally has inside
	[/fire_event]
	[modify_unit]
		[filter]
			id=Voadar
		[/filter]
		moves=5
	[/modify_unit]
	[message]
		speaker=narrator
		title=_"Announcer"
		image=wesnoth-icon.png
		sound=horn-signals/horn-1.ogg
		message=_"Let the match begin!"
	[/message]
	{VARIABLE Voadar.disallow_defeat yes}
	{VARIABLE Voadar.allow_inventory no}
[/event]
 
# these events are for when a gladiator match ends
# the code (from inside the enemy unit's file) will call one of these
[event]
	name=gladiator_win
	id=gladiator_win
	first_time_only=no
	[message]
		speaker=narrator
		title=_"Announcer"
		image=wesnoth-icon.png
		sound=horn-signals/horn-8.ogg
		message=_"Congratulations to the winner, Voadar! You may collect your prize, $d|$gladiating.prize_gold|$b| gold! Thank you to everyone who watched the match, and come again!"
	[/message]
	# wait to move Voadar back so you get experience
	[event]
		name=side turn end
		[place_shroud]
		[/place_shroud]
		{TELEPORT_UNIT (id=Voadar) 10 45}
		{SCROLL_TO 10 45}
		[fire_event]
			name=enter_area
			# this gives the infinite moves that Voadar normally has inside
		[/fire_event]
		[modify_unit]
			[filter]
				id=Voadar
			[/filter]
			moves=8
		[/modify_unit]
		[gold]
			side=1
			amount=$gladiating.prize_gold|
		[/gold]
		[message]
			race=elf
			[filter_location]
				x,y=10,47
				radius=1
			[/filter_location]
			message=_"Congratulations on the win! You knew that all participants get free medical treatment after the matches, right?"
		[/message]
		{MOVE_UNIT (
			race=elf
			[filter_location]
				x,y=10,47
				radius=1
			[/filter_location]
		) 10 45}
		[heal_unit]
			[filter]
				id=Voadar
			[/filter]
			amount=20
			animate=yes
			restore_statuses=no
		[/heal_unit]
		{MOVE_UNIT (
			race=elf
			[filter_location]
				x,y=10,45
				radius=1
			[/filter_location]
		) 10 47}
		{VARIABLE Voadar.disallow_defeat no}
		{VARIABLE Voadar.allow_inventory yes}
		{VARIABLE_OP gladiating.wins add 1}
	[/event]
[/event]
[event]
	name=gladiator_loss
	id=gladiator_loss
	first_time_only=no
	{VOADAR_STORE_UNIT Voadar no}
	[kill]
		id=Voadar
		animate=yes
		fire_event=no
	[/kill]
	{VARIABLE Voadar.unit.hitpoints 5}
	{VARIABLE Voadar.unit.moves $Voadar.unit.max_moves|}
	{FADE_TO_BLACK}
	[place_shroud]
	[/place_shroud]
	[unstore_unit]
		variable=Voadar.unit
		x,y=10,45
		find_vacant=yes
	[/unstore_unit]
	[redraw]
		clear_shroud=yes
	[/redraw]
	{SCROLL_TO 10 45}
	[fire_event]
		name=enter_area
		# this gives the infinite moves that Voadar normally has inside
	[/fire_event]
	{FADE_IN}
	[message]
		race=elf
		[filter_location]
			x,y=10,47
			radius=1
		[/filter_location]
		message=_"Tough loss, huh? Don't worry, everyone loses once in a while. Here, let me help you out a little."
	[/message]
	{MOVE_UNIT (
		race=elf
		[filter_location]
			x,y=10,47
			radius=1
		[/filter_location]
	) 10 45}
	[heal_unit]
		[filter]
			id=Voadar
		[/filter]
		amount=20
		animate=yes
		restore_statuses=no
	[/heal_unit]
	{MOVE_UNIT (
		race=elf
		[filter_location]
			x,y=10,45
			radius=1
		[/filter_location]
	) 10 47}
	{VARIABLE Voadar.disallow_defeat no}
	{VARIABLE Voadar.allow_inventory yes}
[/event]




