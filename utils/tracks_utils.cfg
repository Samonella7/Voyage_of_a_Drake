#textdomain wesnoth-voadar

# This file contains the tools for making, displaying, and removing tracks

# allow other events to set up tracks
# expects the id of a unit to use for pathfinding in tracks.id (and it should be at the track's starting point)
# expects x,y location the above unit should try to reach in tracks.end
# expects a unique identifier for this set of tracks in tracks.group_name
[event]
	name=create_tracks
	id=create_tracks
	first_time_only=no
	[find_path]
		[traveler]
			id=$tracks.id|
		[/traveler]
		[destination]
			x,y=$tracks.end.x|,$tracks.end.y|
		[/destination]
		variable=tracks.$tracks.group_name|
		allow_multiple_turns=yes
		check_zoc=no
	[/find_path]
	[for]
		array=tracks.$tracks.group_name|.step
		variable=i
		[do]
			{VARIABLE tracks.cur_idx $tracks.unseen_locs.length|}
			{VARIABLE tracks.unseen_locs[$tracks.cur_idx].x $tracks.$tracks.group_name|.step[$i|].x|}
			{VARIABLE tracks.unseen_locs[$tracks.cur_idx].y $tracks.$tracks.group_name|.step[$i|].y|}
			{VARIABLE tracks.unseen_locs[$tracks.cur_idx].name $tracks.group_name|}
		[/do]
	[/for]
[/event]

# allow other events to remove existing tracks
# expects a unique identifier for this set of tracks in tracks.group_name
#   (it should match the one used in create_tracks)
[event]
	name=remove_tracks
	id=remove_tracks
	first_time_only=no
	# first, remove images for tracks that have already been seen:
	[for]
		array=tracks.$tracks.group_name|.step
		variable=i
		[do]
			[remove_item]
				x=$tracks.$tracks.group_name|.step[$i|].x|
				y=$tracks.$tracks.group_name|.step[$i|].y|
				image=items/tracks1.png
			[/remove_item]
			[remove_item]
				x=$tracks.$tracks.group_name|.step[$i|].x|
				y=$tracks.$tracks.group_name|.step[$i|].y|
				image=items/tracks2.png
			[/remove_item]
			[remove_item]
				x=$tracks.$tracks.group_name|.step[$i|].x|
				y=$tracks.$tracks.group_name|.step[$i|].y|
				image=items/tracks3.png
			[/remove_item]
		[/do]
	[/for]
	{CLEAR_VARIABLE tracks.$tracks.group_name|}
	# next, remove variables related to these tracks
	[for]
		array=tracks.unseen_locs
		reverse=yes
		[do]
			{IF_VAR tracks.unseen_locs[$i|].name equals $tracks.group_name| (
				[then]
					{CLEAR_VARIABLE tracks.unseen_locs[$i|]}
				[/then]
			)}
		[/do]
	[/for]
	[for]
		array=tracks.seen_locs
		reverse=yes
		[do]
			{IF_VAR tracks.seen_locs[$i|].name equals $tracks.group_name| (
				[then]
					{CLEAR_VARIABLE tracks.seen_locs[$i|]}
				[/then]
			)}
		[/do]
	[/for]
[/event]

# allow voadar to see tracks (after learning to track)
[event]
	name=moveto
	id=see_new_tracks
	first_time_only=no
	{VOADAR_FILTER_VARIABLE Voadar.can_track yes}
	[filter]
		id=Voadar
		[filter_location]
			find_in=tracks.unseen_locs
			[or]
				find_in=tracks.seen_locs
			[/or]
		[/filter_location]
	[/filter]
	
	[for]
		array=tracks.unseen_locs
		reverse=yes
		variable=i
		[do]
			[if]
				[have_location]
					x,y=$tracks.unseen_locs[$i|].x|,$tracks.unseen_locs[$i|].y|
					[and]
						x,y=$x1,$y1
						radius=3
					[/and]
				[/have_location]
				[then]
					[set_variable]
						name=tracks.rando
						rand=1..3
					[/set_variable]
					[item]
						x,y=$tracks.unseen_locs[$i|].x|,$tracks.unseen_locs[$i|].y|
						image=items/tracks$tracks.rando|.png
					[/item]
					{VARIABLE tracks.cur_idx $tracks.seen_locs.length|}
					{VARIABLE tracks.seen_locs[$tracks.cur_idx].x $tracks.unseen_locs[$i|].x|}
					{VARIABLE tracks.seen_locs[$tracks.cur_idx].y $tracks.unseen_locs[$i|].y|}
					{VARIABLE tracks.seen_locs[$tracks.cur_idx].name $tracks.unseen_locs[$i|].name|}
					{CLEAR_VARIABLE tracks.unseen_locs[$i|]}
				[/then]
			[/if]
		[/do]
	[/for]
[/event]


[event]
	name=victory
	id=tracks_utils_clear_variables
	{CLEAR_VARIABLE tracks}
[/event]