#textdomain wesnoth-voadar
[unit_type]
	# Events related to this unit are kept here for organizational purposes.
	# Standard unit data is below
	
	# prepare all necessary variables
	[event]
		name=start
		id=Tetaitiel_prepare_variables
		first_time_only=yes
		{VARIABLE gladiators.last_stargazer Tetaitiel}
		{VARIABLE Tetaitiel.conversation Tetaitiel_conversation}
		[role]
			role=commodir_in
			id=Commodir
		[/role]
		[role]
			role=gladiator_out
			id=Tetaitiel
		[/role]
		{VOADAR_ADD_ITEMS Commodir hat,meat,ale,fish,sword}
		{VOADAR_ADD_ITEMS Tetaitiel hat,meat,ale,fish,sword}
	[/event]
	
	# These standard schedule handlers are shared with her husband
	[event]
		name=side 2 turn
		id=gladiators_new_schedule
		first_time_only=no
		[filter_condition]
			[variable]
				name=schedule.hour
				equals=1
			[/variable]
			[or]
				[variable]
					name=schedule.hour
					equals=12
				[/variable]
			[/or]
			# don't match the very first day:
			[not]
				[variable]
					name=turn_number
					equals=2
				[/variable]
			[/not]
		[/filter_condition]
		[switch]
			variable=schedule.current
			# assign roles based on the day/night
			# There is only one role for being outside advertising, but
			# there is a role for each of them for staying inside. This is
			# because they often both stay in.
			[case]
				value=1
				[role]
					role=tetaitiel_in
					id=Tetaitiel
				[/role]
				[role]
					role=gladiator_out
					id=Commodir
				[/role]
			[/case]
			[case]
				value=2
				[role]
					role=commodir_in
					id=Commodir
				[/role]
				[role]
					role=gladiator_out
					id=Tetaitiel
				[/role]
			[/case]
			[case]
				value=3,5
				# On day 3 and night 2, they both stay in
				[role]
					role=commodir_in
					id=Commodir
				[/role]
				[role]
					role=tetaitiel_in
					id=Tetaitiel
				[/role]
			[/case]
			[else]
				# On nights 1 and 3, they take turns going star gazing
				{IF_VAR gladiators.last_stargazer equals Commodir (
					[then]
						{VARIABLE gladiators.last_stargazer Tetaitiel}
						[role]
							role=gladiator_stargazer
							id=Tetaitiel
						[/role]
						[role]
							role=commodir_in
							id=Commodir
						[/role]
					[/then]
					[else]
						{VARIABLE gladiators.last_stargazer Commodir}
						[role]
							role=gladiator_stargazer
							id=Commodir
						[/role]
						[role]
							role=tetaitiel_in
							id=Tetaitiel
						[/role]
					[/else]
				)}
			[/else]
		[/switch]
	[/event]
	
	# Unlike most people, these two start acting out the new schedule
	# at dawn/dusk, rather than a couple turns before it
	[event]
		name=side 2 turn
		id=gladiators_control_schedule_dawn
		first_time_only=no
		{VOADAR_FILTER_TIME_HOUR 1}
		# but not the very first day:
		[filter_condition]
			[not]
				[variable]
					name=turn_number
					equals=2
				[/variable]
			[/not]
		[/filter_condition]
		# Dont do anything with role=tetaitiel_in or role=commodir_in. They are already in.
		[if]
			[have_unit]
				role=gladiator_out
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						role=gladiator_out
					[/filter]
					variable=gladiators.temp_unit
				[/store_unit]
				{MOVE_UNIT (id=$gladiators.temp_unit.id|) 66 31}
				{TELEPORT_UNIT (role=gladiator_out) 42 26}
				{MOVE_UNIT (role=gladiator_out) 48 26}
				# Stay there throughout the day, until
				[event]
					name=side 2 turn
					#no id
					first_time_only=yes
					{VOADAR_FILTER_TIME_HOUR 11}
					# watch out, the roles have changed already!
					# luckily, $gladiators.temp_unit hasn't.
					{MOVE_UNIT (id=$gladiators.temp_unit.id|) 42 26}
					{TELEPORT_UNIT (id=$gladiators.temp_unit.id|) 66 31}
					{MOVE_UNIT (id=$gladiators.temp_unit.id|) 64 30}
				[/event]
			[/then]
		[/if]
	[/event]
	#Similar to the above event, this one handles the possible stargazer
	[event]
		name=side 2 turn
		id=gladiators_control_schedule_dusk
		first_time_only=no
		{VOADAR_FILTER_TIME_HOUR 12}
		# Dont do anything with role=tetaitiel_in or role=commodir_in. They are already in.
		[if]
			[have_unit]
				role=gladiator_stargazer
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						role=gladiator_stargazer
					[/filter]
					variable=gladiators.temp_unit
				[/store_unit]
				{MOVE_UNIT (id=$gladiators.temp_unit.id|) 66 31}
				{TELEPORT_UNIT (role=gladiator_stargazer) 42 26}
				{MOVE_UNIT (role=gladiator_stargazer) 34 26}
				{TELEPORT_UNIT (role=gladiator_stargazer) 32 26}
				{MOVE_UNIT (role=gladiator_stargazer) 21 28}
				{VOADAR_SET_SIMPLE_DESTINATION $gladiators.temp_unit.id| 7 35}
				# Stay there throughout the night, until
				[event]
					name=new turn
					#no id
					first_time_only=yes
					{VOADAR_FILTER_TIME_PREP_HOUR}
					# watch out, the roles have changed already!
					# luckily, $gladiators.temp_unit hasnt.
					{MOVE_UNIT (id=$gladiators.temp_unit.id|) 19 28}
					{VOADAR_SET_DESTINATION $gladiators.temp_unit.id| 32 26 (
						{TELEPORT_UNIT (id=$gladiators.temp_unit.id|) 34 26}
						{MOVE_UNIT (id=$gladiators.temp_unit.id|) 42 26}
						{TELEPORT_UNIT (id=$gladiators.temp_unit.id|) 66 31}
						{MOVE_UNIT (id=$gladiators.temp_unit.id|) 64 30}
					)}
				[/event]
			[/then]
		[/if]
	[/event]
	# Get Tetaitiel back inside after the very first day:
	[event]
		name=side 2 turn
		id=gladiators_after_first_day
		first_time_only=yes
		{VOADAR_FILTER_TIME_HOUR 11}
		{MOVE_UNIT (id=Tetaitiel) 42 26}
		{TELEPORT_UNIT (id=Tetaitiel) 66 31}
		{MOVE_UNIT (id=Tetaitiel) 64 30}
	[/event]
	
	# Unlike with most units, it is easier to judge which conversation should happen
	# after you start one, not before. Therefore, this is always the "conversation," and
	# this decides which event should actually be thrown
	[event]
		name=Tetaitiel_conversation
		id=Tetaitiel_conversation
		first_time_only=no
		# Unfortunately, we have to filter based on her location, since the role isn't always
		# exactly synced with it
		# there are three possible conversations:
		# first, she is in the forest stargazing:
		[if]
			[have_unit]
				id=Tetaitiel
				x=0-32
			[/have_unit]
			[then]
				[fire_event]
					name=gladiator_conversation_launch_puzzles
					[primary_unit]
						id=Tetaitiel
					[/primary_unit]
				[/fire_event]
			[/then]
			[else]
				[if]
					[have_unit]
						id=Tetaitiel
						x=61-100
					[/have_unit]
					[then]
						[fire_event]
							name=gladiator_conversation_in
							[primary_unit]
								id=Tetaitiel
							[/primary_unit]
						[/fire_event]
					[/then]
					[else]
						[fire_event]
							name=gladiator_conversation_advertise
							[primary_unit]
								id=Tetaitiel
							[/primary_unit]
						[/fire_event]
					[/else]
				[/if]
			[/else]
		[/if]
	[/event]
	
	#This is where the actual conversations begin:
	
	[event]
		name=gladiator_conversation_advertise
		id=gladiator_conversation_advertise
		first_time_only=no
		# the conversation is different depending on how many times you've leveled up:
		{IF_VAR Voadar.advancement_count greater_than 1 (
			[then]
				{IF_VAR Voadar.response not_equals 3 (
					[then]
						{IF_VAR Voadar.advancement_count less_than 5 (
							[then]
								{VOADAR_MESSAGE unit (_"Greetings, Voadar! How has the arena been treating you? Gladiating is a challenging sport, but if you stick to it you will surely improve. Perhaps we will even start pitting you against $d|stronger opponents!$b|")}
							[/then]
							[else]
								{VOADAR_MESSAGE unit (_"Greetings, Voadar! You look splendid, ready to battle our top tier gladiators!")}
							[/else]
						)}
					[/then]
				)}
			[/then]
			[else]
				{VOADAR_MESSAGE unit (_"Come one, come all! See the finest $d|gladiators$b| in the entire country! Elves, dwarves, orcs, men and even monsters, all fighting to be named champion. Don't miss the thrill of a lifetime!")}
				[fire_event]
					name=Voadar_responds
				[/fire_event]
				[switch]
					variable=Voadar.response
					[case]
						value=3
						# nothing if 3
					[/case]
					[case]
						value=4
						{VOADAR_MESSAGE unit (_"You sound confident in yourself. And you look strong indeed! If you have come hoping to prove that, you found the right village. Our gladiator matches are world renown for being the more fierce and competitive than any other; all the best fighters come here to challenge themselves. Inquire inside the arena if you wish to try!")}
					[/case]
					[else]
						# 1 or 2
						{VOADAR_MESSAGE unit (_"Our gladiator matches are world renown for being the more fierce and competitive than any other; all the best fighters come here to challenge themselves. Inquire inside the arena if you wish to try!")}
					[/else]
				[/switch]
			[/else]
		)}
	[/event]
	
	[event]
		name=gladiator_conversation_in
		id=gladiator_conversation_in
		first_time_only=no
		#the conversation depends on whether you've fought much yet
		# we're just praying that you don't get tons of experience from farming for carapaces
		{IF_VAR Voadar.advancement_count greater_than 3 (
			[then]
				# If you are not new:
				{VOADAR_MESSAGE unit (_"Welcome back, Voadar! Would you like a ticket?")}
				{VARIABLE Voadar.bool_message (_"Do you want to watch a gladiator match?")}
				[fire_event]
					name=Voadar_bool_responds
				[/fire_event]
				{IF_VAR Voadar.bool_response equals yes (
					[then]
						{VOADAR_MESSAGE unit (_"I'm sorry, but all the seats are full right now. Better luck tomorrow!")}
						{VOADAR_MESSAGE_NARRATOR (_"<i>Note: currently, watching a match is unimplemented. Hopefully it will be possible in a future version of this campaign.</i>")}
						#TODO well, that ^
					[/then]
					[else]
						{VOADAR_MESSAGE unit (_"Then you must be here to fight again. Excellent! You know where to sign up!")}
					[/else]
				)}
			[/then]
			[else]
				# If you are new:
				{VOADAR_MESSAGE unit (_"Welcome to the arena! Would you like a ticket?")}
				{VARIABLE Voadar.bool_message (_"Do you want to watch a gladiator match?")}
				[fire_event]
					name=Voadar_bool_responds
				[/fire_event]
				{IF_VAR Voadar.bool_response equals yes (
					[then]
						{VOADAR_MESSAGE unit (_"I'm sorry, but all the seats are taken right now. Please try again later.")}
						{VOADAR_MESSAGE_NARRATOR (_"<i>Note: currently, watching a match is unimplemented. Hopefully it will be possible in a future version of this campaign.</i>")}
						#TODO well, that ^
					[/then]
					[else]
						{VOADAR_MESSAGE unit (_"Then you must be looking to compete! You should know that the matches are perfectly safe; it's been months since anyone was permanently hurt. You can sign up at the white booth.")}
					[/else]
				)}
			[/else]
		)}
	[/event]
	
	# If you move to the right tile, you have the option of entering a gladiator match
	[event]
		name=moveto
		id=enter_gladiator_match
		first_time_only=no
		[filter]
			id=Voadar
			x,y=64,28
		[/filter]
		# if you've entered the "big league" (if you've advanced 5 times)
		# one of the elves congratulates (and warns) you
		{IF_VAR Voadar.advancement_count greater_than_equal_to 5 (
			[then]
				[fire_event]
					name=gladiators_harder_warning
					# this event is first_time_only=yes
					# so you only get the warning once
				[/fire_event]
			[/then]
		)}
		{VARIABLE Voadar.bool_message (_"Would you like to enter a gladiator match?")}
		[fire_event]
			name=Voadar_bool_responds
		[/fire_event]
		{IF_VAR Voadar.bool_response equals yes (
			[then]
				# if hob is in the arena and you haven't fought him yet today, you fight him
				# but only if you have met both him and Curryan already
				[if]
					[variable]
						name=Hob.ready_to_fight
						equals=yes
					[/variable]
					[variable]
						name=Hob.met_Voadar
						equals=yes
					[/variable]
					[variable]
						name=Curryan.Voadar_has_started_letters
						equals=yes
					[/variable]
					[then]
						{NAMED_UNIT 4 (Gladiator Hob) 84 25 Gladiator_Hob (_"Hob") (random_traits=no)}
						{VARIABLE gladiators.prize_money 4}
						{VARIABLE Hob.ready_to_fight no}
						[fire_event]
							name=init_battle
						[/fire_event]
						# return, so the code following this [if] doesn't execute
						[return]
						[/return]
					[/then]
				[/if]
				# Otherwise, there is a list of gladiators for you to fight
				# (if you have advanced a lot, you get to fight harder gladiators)
				{IF_VAR Voadar.advancement_count less_than 5 (
					[then]
						[set_variables]
							name=gladiators.combatants_list.list
							mode=replace
							[value]
								type="Orcish Gladiator"
							[/value]
							[value]
								type="Gladiator Ogre"
							[/value]
							[value]
								type="Dwarvish Gladiator"
							[/value]
							[value]
								type="Nagini Gladiator"
							[/value]
							[value]
								type="Gladiator Mage"
							[/value]
							[value]
								type="Saurian Gladiator"
							[/value]
							[value]
								type="Outlaw Gladiator"
							[/value]
							[value]
								type="Human Gladiator"
							[/value]
						[/set_variables]
						# you also get less prize money in the little league
						{VARIABLE gladiators.prize_money 7}
					[/then]
					[else]
						[set_variables]
							name=gladiators.combatants_list.list
							mode=replace
							[value]
								type="Troll Gladiator"
							[/value]
							[value]
								type="Thunder Gladiator"
							[/value]
							[value]
								type="Goblin Gladiator"
							[/value]
							[value]
								type="Berserker Gladiator"
							[/value]
							[value]
								type="Gladiator Wose"
							[/value]
							[value]
								type="Gryphon Gladiator"
							[/value]
							[value]
								type="Armored Gladiator"
							[/value]
						[/set_variables]
						{VARIABLE gladiators.prize_money 12}
					[/else]
				)}
				# if the tourists are in the arena, they get added to the list too
				# in fact, they each get added twice. since they only compete 1 in 6 schedules,
				# you should have a pretty good chance of seeing them when they are there.
				# 	the tourists have dynamic difficulty; they get harder as you advance more on
				#	their own, so they are appropriate for fighting in the big and little league
				{IF_VAR Nickieldur.tourists_ready_to_fight equals yes (
					[then]
						[set_variables]
							name=gladiators.combatants_list.list
							mode=append
							[value]
								type="Gladiator Nickieldur"
							[/value]
							[value]
								type="Gladiator Nickieldur"
							[/value]
							[value]
								type="Gladiator Rayyan"
							[/value]
							[value]
								type="Gladiator Rayyan"
							[/value]
							[value]
								type="Gladiator Derek"
							[/value]
							[value]
								type="Gladiator Derek"
							[/value]
						[/set_variables]
					[/then]
				)}
				# now we just choose one randomly and start the fight
				# if you have advanced at least 7 times (two more than it takes to get in the big league)
				# you have a chance to fight Meviel, the reigning champ (also if you havent beaten her yet)
				[if]
					[variable]
						name=Voadar.advancement_count
						greater_than=6
					[/variable]
					[variable]
						name=gladiators.beaten_Meviel
						not_equals=yes
					[/variable]
					[then]
						[set_variable]
							name=gladiators.rando
							rand=0..6
						[/set_variable]
						{IF_VAR gladiators.rando equals 0 (
							[then]
								{VARIABLE gladiators.prize_money 50}
								{GENERIC_UNIT 4 (Elvish Gladiator) 84 25}
								[fire_event]
									name=init_battle
								[/fire_event]
								[return]
								[/return]
							[/then]
						)}
					[/then]
				[/if]
				# if (as is likely) the above [if] does not happen, choose a gladiator normally, from
				# the list we already populated:
				[set_variable]
					name=gladiators.rando
					rand=1..$gladiators.combatants_list.list.length|
				[/set_variable]
				{VARIABLE_OP gladiators.rando sub 1}
				{GENERIC_UNIT 4 $gladiators.combatants_list.list[$gladiators.rando|].type| 84 25}
				[fire_event]
					name=init_battle
				[/fire_event]
			[/then]
		)}
	[/event]
	
	# though the unit file's contain code in an init_battle event for actually 
	# starting the battle, this event should also fire, making message that always plays
	# and removing the event that ends the game if Voadar dies
	# and takes away your items (healing during a match is cheating)
	[event]
		name=init_battle
		id=gladiator_battle_start
		first_time_only=no
		[place_shroud]
		[/place_shroud]
		{TELEPORT_UNIT (id=Voadar) 84 35}
		{SCROLL_TO 84 35}
		[fire_event]
			name=exit_area
			# this takes away the infinite moves that Voadar normally has inside
		[/fire_event]
		[modify_unit]
			[filter]
				id=Voadar
			[/filter]
			moves=5
		[/modify_unit]
		[message]
			speaker=narrator
			title=_"Announcer"
			image=wesnoth-icon.png
			sound=horn-signals/horn-1.ogg
			message=_"Let the match begin!"
		[/message]
		{VARIABLE Voadar.disallow_defeat yes}
		{VARIABLE Voadar.allow_inventory no}
		
	[/event]
	 
	# these events are for when a gladiator match ends
	# the code (from inside the enemy unit's file) will call one of these
	[event]
		name=gladiator_win
		id=gladiator_win
		first_time_only=no
		[message]
			speaker=narrator
			title=_"Announcer"
			image=wesnoth-icon.png
			sound=horn-signals/horn-8.ogg
			message=_"Congratulations to the winner, Voadar! You may collect your prize, $d|$gladiators.prize_money|$b| gold! Thank you to everyone who watched the match, and come again!"
		[/message]
		# wait to move Voadar back so you get experience
		[event]
			name=side turn end
			[place_shroud]
			[/place_shroud]
			{TELEPORT_UNIT (id=Voadar) 64 28}
			{SCROLL_TO 64 28}
			[fire_event]
				name=enter_area
				# this gives the infinite moves that Voadar normally has inside
			[/fire_event]
			[modify_unit]
				[filter]
					id=Voadar
				[/filter]
				moves=8
			[/modify_unit]
			[gold]
				side=1
				amount=$gladiators.prize_money|
			[/gold]		[message]
			race=elf
			[filter_location]
				x,y=64,30
				radius=1
			[/filter_location]
			message=_"Congratulations on the win! You knew that all participants get free medical treatment after the matches, right?"
		[/message]
		{MOVE_UNIT (
			race=elf
			[filter_location]
				x,y=64,30
				radius=1
			[/filter_location]
		) 64 28}
		[heal_unit]
			[filter]
				id=Voadar
			[/filter]
			amount=20
			animate=yes
			restore_statuses=no
		[/heal_unit]
		{MOVE_UNIT (
			race=elf
			[filter_location]
				x,y=64,28
				radius=1
			[/filter_location]
		) 64 30}
			{VARIABLE Voadar.disallow_defeat no}
			{VARIABLE Voadar.allow_inventory yes}
		[/event]
	[/event]
	[event]
		name=gladiator_loss
		id=gladiator_loss
		first_time_only=no
		{VOADAR_STORE_UNIT Voadar no}
		[kill]
			id=Voadar
			animate=yes
			fire_event=no
		[/kill]
		{VARIABLE Voadar.unit.hitpoints 5}
		{VARIABLE Voadar.unit.moves $Voadar.unit.max_moves|}
		{FADE_TO_BLACK}
		[place_shroud]
		[/place_shroud]
		[unstore_unit]
			variable=Voadar.unit
			x,y=64,28
			find_vacant=yes
		[/unstore_unit]
		[redraw]
			clear_shroud=yes
		[/redraw]
		{SCROLL_TO 64 28}
		[fire_event]
			name=enter_area
			# this gives the infinite moves that Voadar normally has inside
		[/fire_event]
		{FADE_IN}
		[message]
			race=elf
			[filter_location]
				x,y=64,30
				radius=1
			[/filter_location]
			message=_"Tough loss, huh? Don't worry, everyone loses once in a while. Here, let me help you out a little."
		[/message]
		{MOVE_UNIT (
			race=elf
			[filter_location]
				x,y=64,30
				radius=1
			[/filter_location]
		) 64 28}
		[heal_unit]
			[filter]
				id=Voadar
			[/filter]
			amount=20
			animate=yes
			restore_statuses=no
		[/heal_unit]
		{MOVE_UNIT (
			race=elf
			[filter_location]
				x,y=64,28
				radius=1
			[/filter_location]
		) 64 30}
		{VARIABLE Voadar.disallow_defeat no}
		{VARIABLE Voadar.allow_inventory yes}
	[/event]
	
	[event]
		name=gladiators_harder_warning
		id=gladiators_harder_warning
		first_time_only=yes
		# we'll just hope and pray that you didn't get all your xp from
		# farming carapaces, or these messages will make no sense
		[message]
			race=elf
			[filter_location]
				x,y=64,30
				radius=1
			[/filter_location]
			message=_"Oh, Voadar, I've been meaning to congratulate you! Everyone knows you've been working hard, and you seem really strong! I've decided to start pitting you against $d|tougher$b| gladiators."
		[/message]
		[fire_event]
			name=Voadar_responds
		[/fire_event]
		[switch]
			variable=Voadar.response
			[case]
				value=1
				[message]
					race=elf
					[filter_location]
						x,y=64,30
						radius=1
					[/filter_location]
					message=_"Glad you're excited! Just be warned, they'll be a lot tougher than the gladiators you're used to. But the $d|prize money$b| for winning is better too!"
				[/message]
			[/case]
			[case]
				value=2,4
				[message]
					race=elf
					[filter_location]
						x,y=64,30
						radius=1
					[/filter_location]
					message=_"Ha ha, you didn't think you were already fighting the toughest, did you? But don't worry, everything is still risk free. And the $d|prize money$b| for winning will be better!"
				[/message]
			[/case]
			[else]
				[message]
					race=elf
					[filter_location]
						x,y=64,30
						radius=1
					[/filter_location]
					message=_"You should know that the rules are the same, you still won't be killed. But there's more $d|prize money$b| for winning!"
				[/message]
			[/else]
		[/switch]
		# also, this is our chance to clean up a bit
		# since Voadar won't be fighting any of the old guys, we can remove their events:
		{VOADAR_REMOVE_EVENT outlaw_gladiator_match}
		{VOADAR_REMOVE_EVENT saurian_gladiator_match}
		{VOADAR_REMOVE_EVENT human_gladiator_match}
		{VOADAR_REMOVE_EVENT mage_gladiator_match}
		{VOADAR_REMOVE_EVENT naga_gladiator_match}
		{VOADAR_REMOVE_EVENT ogre_gladiator_match}
		{VOADAR_REMOVE_EVENT orc_gladiator_match}
		{VOADAR_REMOVE_EVENT dwarf_gladiator_match}
	[/event]
	
	{VOADAR_CREATE_CONVERSATION_OPTION Tetaitiel}
	
	# clear all variables related to events in this file
	[event]
		name=victory
		id=Tetaitiel_clear_variables
		{CLEAR_VARIABLE gladiators}
		{CLEAR_VARIABLE Tetaitiel}
	[/event]
	
	########################################
	# Reactions to shown items begin here
	########################################
	
	[event]
		name=show_letter
		id=gladiators_show_letter
		first_time_only=no
		{VOADAR_SHOW_ITEM_FILTER Tetaitiel,Commodir}
		{VOADAR_MESSAGE $unit.id| (_"A letter from the tribe? Something unusual must be happening...")}
		{VOADAR_MESSAGE $unit.id| (_"<i>(Frowns)</i> I must show this to $$unit.id|.spouse| immediately. Until then, I'll send a short response... <i>(Writes a letter and gives it to you)</i>")}
	[/event]
	
	[event]
		name=show_hat
		id=gladiators_show_hat
		first_time_only=no
		{VOADAR_SHOW_ITEM_FILTER Tetaitiel,Commodir}
		{VOADAR_MESSAGE $unit.id| (_"Ah, I see. You are trying to find out about your friend's murder. I'm afraid I can't tell you anything; I never knew Cadameron closely. He didn't care for fighting, and I don't care for farming.")}
	[/event]
	
	[event]
		name=show_meat,show_fish,show_ale
		id=gladiators_show_food
		first_time_only=no
		{VOADAR_SHOW_ITEM_FILTER Tetaitiel,Commodir}
		{VOADAR_MESSAGE $unit.id| (_"Are you wondering why food isn't allowed in the arena? Some of the matches tend to drag on very long already, but the audience loses interest after a few hours. If we let contestants bring meals in with them, there's no telling how long a match between two patient fighters might last.")}
	[/event]
	
	[event]
		name=show_sword
		id=gladiators_show_sword
		first_time_only=no
		{VOADAR_SHOW_ITEM_FILTER Tetaitiel,Commodir}
		{VOADAR_MESSAGE $unit.id| (_"A sword, I see? To be honest, I think your claws are a much more versatile weapon. Invest time learning to fight well with them, and they will be more powerful than any sword you could wield.")}
	[/event]
	
	########################################
	# Standard unit data begins here
	########################################
    id=Voadar Elvish Sharpshooter
    description= _ ""+{SPECIAL_NOTES}+{SPECIAL_NOTES_MARKSMAN}
	movement=7
	level=1
	[base_unit]
		id=Elvish Sharpshooter
	[/base_unit]
[/unit_type]
