#textdomain wesnoth-voadar
[unit_type]
	# Events related to this unit are kept here for organizational purposes.
	id=Voadar General
	[base_unit]
		id=NE Voadar General
	[/base_unit]
	# Additionally, these are the basic schedule controls for all three guards.
	#     They have to be kept together, so the general is the logical place
	
	
	
	# For each new schedule, assign each guard a role.
	# Each role is then assigned a location (a guard post or off-duty)
	[event]
		name=voadar_new_schedule
		id=guards_new_schedule
		first_time_only=no

		[switch]
			variable=schedule.current
			[case]
				value=1
				# day 1
				[role]
					role=guard_bar
					type=Voadar General
				[/role]
				[role]
					role=guard_west
					type=Voadar Pikeman
				[/role]
				[role]
					role=guard_south
					type=Voadar Longbowman
				[/role]
			[/case]
			[case]
				value=2
				#day 2
				[role]
					role=guard_north
					type=Voadar General
				[/role]
				[role]
					role=guard_bar
					type=Voadar Pikeman
				[/role]
				[role]
					role=guard_south
					type=Voadar Longbowman
				[/role]
			[/case]
			[case]
				value=3
				#day 3
				[role]
					role=guard_west
					type=Voadar General
				[/role]
				[role]
					role=guard_north
					type=Voadar Pikeman
				[/role]
				[role]
					role=guard_bar
					type=Voadar Longbowman
				[/role]
			[/case]
			[case]
				value=4
				# night 1
				[role]
					role=guard_house
					type=Voadar General
				[/role]
				[role]
					role=guard_west
					type=Voadar Pikeman
				[/role]
				[role]
					role=guard_north
					type=Voadar Longbowman
				[/role]
			[/case]
			[case]
				value=5
				# night 2
				[role]
					role=guard_south
					type=Voadar General
				[/role]
				[role]
					role=guard_house
					type=Voadar Pikeman
				[/role]
				[role]
					role=guard_west
					type=Voadar Longbowman
				[/role]
			[/case]
			[else]
				# night 3
				[role]
					role=guard_north
					type=Voadar General
				[/role]
				[role]
					role=guard_south
					type=Voadar Pikeman
				[/role]
				[role]
					role=guard_house
					type=Voadar Longbowman
				[/role]
			[/else]
		[/switch]
		
		# We assume that all units are already outdoors, and will make sure that
		# they get there before this event is fired
		# (they are all outdoors at the scenario start)
		[if]
			[have_unit]
				role=guard_north
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						role=guard_north
					[/filter]
					variable=guards.temp_unit_role
				[/store_unit]
				{VOADAR_SET_DESTINATION $guards.temp_unit_role.id| 58 26 (
					{VARIABLE $guards.temp_unit_role.id|.conversation $guards.temp_unit_role.id|_conversation_on_duty}
					# before the next schedule, move enough to not get in the way of the next guard coming to this post:
					[event]
						name=side 2 turn
						{VOADAR_FILTER_TIME_PREP_HOUR}
						{MOVE_UNIT (id=$guards.temp_unit_role.id|) 56 27}
					[/event]
				)}
			[/then]
		[/if]
		[if]
			[have_unit]
				role=guard_south
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						role=guard_south
					[/filter]
					variable=guards.temp_unit_role
				[/store_unit]
				{VOADAR_SET_DESTINATION $guards.temp_unit_role.id| 58 32 (
					{VARIABLE $guards.temp_unit_role.id|.conversation $guards.temp_unit_role.id|_conversation_on_duty}
					# before the next schedule, move enough to not get in the way of the next guard coming to this post:
					[event]
						name=side 2 turn
						{VOADAR_FILTER_TIME_PREP_HOUR}
						{MOVE_UNIT (id=$guards.temp_unit_role.id|) 54 31}
					[/event]
				)}
			[/then]
		[/if]
		[if]
			[have_unit]
				role=guard_west
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						role=guard_west
					[/filter]
					variable=guards.temp_unit_role
				[/store_unit]
				{VOADAR_SET_DESTINATION $guards.temp_unit_role.id| 40 34 (
					{VARIABLE $guards.temp_unit_role.id|.conversation $guards.temp_unit_role.id|_conversation_on_duty}
					# before the next schedule, move enough to not get in the way of the next guard coming to this post:
					[event]
						name=side 2 turn
						{VOADAR_FILTER_TIME_PREP_HOUR}
						{MOVE_UNIT (id=$guards.temp_unit_role.id|) 46 32}
					[/event]
				)}
			[/then]
		[/if]
		
		[if]
			[have_unit]
				role=guard_house
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						role=guard_house
					[/filter]
					variable=guards.temp_unit_role
				[/store_unit]
				{VOADAR_SET_DESTINATION $guards.temp_unit_role.id| 57 29 (
					{TELEPORT_UNIT (role=guard_house) 51 7}
					{MOVE_UNIT (role=guard_house) 52 9}
					{VARIABLE $guards.temp_unit_role.id|.conversation $guards.temp_unit_role.id|_conversation_house}
					{VOADAR_SET_SIMPLE_DESTINATION $guards.temp_unit_role.id| 52 9}
					# At this point, we arrived at the chair in the guard house.
					# We wait until the turn before the next schedule assignment,
					# and leave the building.
					[event]
						name=new turn
						{VOADAR_FILTER_TIME_PREP_HOUR}
						{VOADAR_SET_DESTINATION $guards.temp_unit_role.id| 51 7 (
							[fire_event]
								name=guard_escorts_voadar_out
								[primary_unit]
									id=$guards.temp_unit_role.id|
								[/primary_unit]
							[/fire_event]
							{VARIABLE $guards.temp_unit_role.id|.conversation $guards.temp_unit_role.id|_conversation_on_duty}
							{TELEPORT_UNIT (role=guard_house) 57 29}
							{MOVE_UNIT (role=guard_house) 55 28}
						)}
					[/event]
				)}
			[/then]
		[/if]
		
		[if]
			[have_unit]
				role=guard_bar
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						role=guard_bar
					[/filter]
					variable=guards.temp_unit_role
				[/store_unit]
				{VOADAR_SET_DESTINATION $guards.temp_unit_role.id| 51 30 (
					{TELEPORT_UNIT (role=guard_bar) 66 17}
					{MOVE_UNIT (role=guard_bar) 65 16}
					{VARIABLE $guards.temp_unit_role.id|.conversation $guards.temp_unit_role.id|_conversation_tavern}
					{VOADAR_SET_SIMPLE_DESTINATION $guards.temp_unit_role.id| 65 16}
					# At this point, we arrived at the chair in the bar.
					# Wait until the turn before the next schedule assignment,
					# and leave the building.
					[event]
						name=new turn
						{VOADAR_FILTER_TIME_PREP_HOUR}
						{VOADAR_SET_DESTINATION $guards.temp_unit_role.id| 66 17 (
							{VARIABLE $guards.temp_unit_role.id|.conversation $guards.temp_unit_role.id|_conversation_on_duty}
							{TELEPORT_UNIT (role=guard_bar) 51 30}
							{MOVE_UNIT (role=guard_bar) 52 31}
						)}
					[/event]
				)}
			[/then]
		[/if]

	[/event]
	
	#Also, Harold needs to move at the end of the very first day, or he'll be in Gwain's way:
	[event]
		name=side 2 turn
		id=Harold_gets_out_of_the_way
		first_time_only=yes
		{VOADAR_FILTER_TIME_PREP_HOUR}
		{MOVE_UNIT (id=Harold) 46 32}
	[/event]
	
	################################################################### Schedule ends, conversations begin
		
	[event]
		name=George_conversation_on_duty
		id=George_conversation_on_duty
		first_time_only=no
		{IF_VAR George.met_Voadar equals no (
			[then]
				[fire_event]
					name=George_meets_Voadar
				[/fire_event]
				[return]
				[/return]
			[/then]
		)}
		[store_locations]
			variable=George.brazier_locs
			terrain=*^Ybr
		[/store_locations]
		[switch]
			variable=George.brazier_locs.length
			[case]
				value=1
				# if there is only one left you get some encouragement and a hint
				{VOADAR_MESSAGE George (_"Remarkable! I do believe that only $d|one$b| brazier remains unlit! I'm assuming it's not easy to find, yes? Hm, I do remember one brazier in the forest that was all but invisible when unlit. $d|Maple$b| the elf set that one up at some place she often visits, but it's been troublesome for my human employees and I ever since. But maybe you already found it, and it's a different one that's still missing.")}
			[/case]
			[else]
				{VOADAR_MESSAGE George (_"Welcome back to Raplice! I hope you're doing well?")}
				[fire_event]
					name=Voadar_responds
				[/fire_event]
				[switch]
					variable=Voadar.response
					[case]
						value=1
						{VOADAR_MESSAGE George (_"Excellent! By the way, my tally shows that there are still $d|$George.brazier_locs.length|$b| braziers left unlit.")}
					[/case]
					[case]
						value=4
						{VOADAR_MESSAGE George (_"Hm, that sounds unfortunate. By the way, my tally shows that there are still $d|$George.brazier_locs.length|$b| braziers left unlit.")}
					[/case]
					[else]
						{VOADAR_MESSAGE George (_"Ah yes, my tally shows that there are still $d|$George.brazier_locs.length|$b| braziers left unlit.")}
					[/else]
				[/switch]
			[/else]
			[case]
				value=0
				# if you have all the braziers, you get a reward, and this event is replaced:
				{VOADAR_MESSAGE George (_"Splendid! All our braziers are lit again! I can't thank you enough for your help. Funds are a bit tight, so this is the only way I can reward you: A Soldier's Guide to Combat, Third Edition.")}
				[message]
					speaker=narrator
					caption=_"A Soldier's Guide to Combat"
					image=icons/book.png
					message=_"This small book, standard issue for the kingdom's soldiers, outlines various combat techniques. By combining practice with study, you can improve you skills much quicker. All future advancements will require 15 less experience!"
				[/message]
				[modify_unit]
					[filter]
						id=Voadar
					[/filter]
					[effect]
						apply_to=max_experience
						increase=-15
						# conveniently, this automatically advances if appropriate
					[/effect]
				[/modify_unit]
				{VOADAR_REMOVE_EVENT George_conversation_on_duty}
				[event]
					name=George_conversation_on_duty
					id=George_conversation_on_duty
					first_time_only=no
					{VOADAR_MESSAGE George (_"Welcome to Raplice! <i>(Laughs)</i> Yes, I know I've said that before. But it's part of my job to make sure everyone feels welcome and safe.")}
				[/event]
				[return]
				[/return]
			[/case]
		[/switch]
		{CLEAR_VARIABLE George.brazier_locs}
	[/event]
	
	# George has the same conversation in the guard house as on duty
	[event]
		name=George_conversation_house
		id=George_conversation_house
		first_time_only=no
		[fire_event]
			name=George_conversation_on_duty
		[/fire_event]
	[/event]
	
	[event]
		name=George_conversation_tavern
		id=George_conversation_tavern
		first_time_only=no
		# unlike the other conversation events, don't try firing George_meets_Voadar
		{VOADAR_MESSAGE George (_"Augh! Go away, I can't talk right now... ")}
		[fire_event]
			name=Voadar_responds
		[/fire_event]
		{IF_VAR Voadar.response equals 3 (
			[then]
				{VOADAR_MESSAGE George (_"<i>(Thinks you left)</i> Oh, how did I get into this... that $d|awful mayor...$b|")}
			[/then]
			[else]
				{VOADAR_MESSAGE George (_"No, find me some other time... whenever I'm on duty, talk to me then.")}
			[/else]
		)}
	[/event]
	
	[event]
		name=George_meets_Voadar
		id=George_meets_Voadar
		first_time_only=yes
		{VARIABLE George.met_Voadar yes}
		{VOADAR_ADD_ITEMS George hat,fish,charm}
		{VOADAR_MESSAGE George (_"Ah, Voadar. A pleasure to have you in the village. Welcome to Raplice! I'm the head of security around here, so come to me if you have any concerns. Normally, you could also see the mayor, $d|Mr. Ronry,$b| but... well, he likes to be left alone. And I don't think you'd like him much, anyway.")}
		[fire_event]
			name=Voadar_responds
		[/fire_event]
		[switch]
			variable=Voadar.response
			[case]
				value=1,3
				{VOADAR_MESSAGE George (_"If you're looking for a place to stay, may I recommend the tavern? There usually are rooms available for rent.")}
			[/case]
			[else]
				{VOADAR_MESSAGE George (_"<i>(Coughs uncomfortably)</i> I really would rather not talk about Mr. Ronry.")}
			[/else]
		[/switch]
		#very short delay:
		[delay]
			time=600
		[/delay]
		{VOADAR_MESSAGE George (_"Actually, let me ask a favor of you before you go. There's a job I've been needing someone to get done and I think you're the perfect fellow! Don't worry, I'll see to it that you'll be compensated. You see, we had an unusual cold snap a few days ago, and all the town braziers went out. We keep them well stocked with fuel so they normally burn for weeks at a time, but now I need someone to re-light them. A simple task for you, methinks?")}
		[fire_event]
			name=Voadar_responds
		[/fire_event]
		[switch]
			variable=Voadar.response
			[case]
				value=1
				{VOADAR_MESSAGE George (_"Ah, don't get too excited! I said it would be simple, but not easy. I'm afraid to say that some of the braziers may be difficult to find without their fires glowing. But there's no hurry, just light them up whenever you notice one, and check in with me occasionally until you've lit them all. Then I'll give you something for your time.")}
			[/case]
			[case]
				value=4
				{VOADAR_MESSAGE George (_"My apologies if I'm being demanding! Please don't feel rushed to finish, I don't mean it that way at all. Just light them up whenever you notice one, and check in with me occasionally so I can reward you when you light them all. I'm afraid to say that some of those braziers may be difficult to find without their fires glowing, however.")}
			[/case]
			[else]
				{VOADAR_MESSAGE George (_"Well... simple, but maybe not too easy. Some of the braziers may be difficult to find without their fires glowing, unfortunately. But there's no hurry, just light them up whenever you notice one, and check in with me occasionally until you've lit them all. Then I'll give you something for your time.")}
			[/else]
		[/switch]
	[/event]
	
	#### You're not allowed in the guard house alone (if there's anyone there to enforce it)
	# this is called whenever a guard leaves the building (due to it's normal schedule)
	# if Voadar is inside, he should be sent out
	# the relevant guard is passed as the primary_unit
	[event]
		name=guard_escorts_voadar_out
		id=guard_escorts_voadar_out
		first_time_only=no
		[filter_condition]
			[have_unit]
				id=$unit.id|
				[filter_vision]
					side=1
				[/filter_vision]
			[/have_unit]
		[/filter_condition]
		{VOADAR_MESSAGE $unit.id| (_"I have a shift starting, so I have to leave. I'm sorry, but this building is off limits to the public unless there is a member of the guard present. You'll have to leave now.")}
		{MOVE_UNIT (x,y=51,7) 52 8}
		{MOVE_UNIT (id=Voadar) 51 7}
		[fire_event]
			name=moveto
			[primary_unit]
				id=Voadar
			[/primary_unit]
		[/fire_event]
		{MOVE_UNIT (id=Voadar) 54 28}
	[/event]
	# also, if you try to enter the building when it's empty but a guard is standing outside, he stops you
	[event]
		name=enter_guard_house
		id=guard_stops_you_from_entering_the_guard_house
		first_time_only=no
		[filter_condition]
			[have_unit]
				side=2
				[filter_location]
					x,y=51,8
					radius=2
				[/filter_location]
				count=0
			[/have_unit]
			[have_unit]
				id=George,Harold,Gwain
				[filter_location]
					x,y=58,27
					radius=3
				[/filter_location]
				# count equals one: it's rare that two guards will be here. if it does happen,
				# the excuse is that they're talking to each other and don't see you slip in. 
				# the real reason is that guarantees [store_unit] below will only match one, which simplifies my code
				count=1
			[/have_unit]
		[/filter_condition]
		[store_unit]
			[filter]
				id=George,Harold,Gwain
				[filter_location]
					x,y=58,27
					radius=3
				[/filter_location]
			[/filter]
			variable=guards.temp_boot
			kill=yes
			animate=no
		[/store_unit]
		{MOVE_UNIT (id=Voadar) 51 8}
		[unstore_unit]
			variable=guards.temp_boot
			x,y=51,7
			find_vacant=yes
		[/unstore_unit]
		{MOVE_UNIT (id=$guards.temp_boot.id|) 50 7}
		{VOADAR_MESSAGE $guards.temp_boot.id| (_"Hey, you shouldn't be in here. This building is off limits to the public unless there is a member of the guard present. You'll have to leave now.")}
		{MOVE_UNIT (id=Voadar) 51 7}
		[fire_event]
			name=moveto
			[primary_unit]
				id=Voadar
			[/primary_unit]
		[/fire_event]
		{MOVE_UNIT (id=Voadar) 54 28}
		{TELEPORT_UNIT (id=$guards.temp_boot.id|) 57 29}
		{MOVE_UNIT (id=$guards.temp_boot.id|) $guards.temp_boot.x| $guards.temp_boot.y|}
		{CLEAR_VARIABLE guards.temp_boot}
	[/event]
	
	[event]
		name=start
		id=George_prepare_variables
		{VARIABLE George.conversation George_conversation_on_duty}
		{VARIABLE George.met_Voadar no}
	[/event]
	
	{VOADAR_CHEST 53 8 rare}
	
	{VOADAR_CREATE_CONVERSATION_OPTION George}
	
	[event]
		name=victory
		id=George_clear_variables
		{CLEAR_VARIABLE George}
		{CLEAR_VARIABLE guards}
	[/event]
	
	# for the braziers quest, as described above
	[event]
		name=moveto
		id=light_brazier
		first_time_only=no
		[filter]
			id=Voadar
			[filter_location]
				[filter_adjacent_location]
					terrain=*^Ybr
				[/filter_adjacent_location]
			[/filter_location]
		[/filter]
		# I never placed braziers close enough for it to be possible to land
		# next to two in one move, so this will always find exactly one location:
		[store_locations]
			terrain=*^Ybr
			[and]
				x,y=$x1|,$y1|
				radius=1
			[/and]
			variable=George.temp_loc
		[/store_locations]
		[animate_unit]
			flag=attack
			[filter]
				id=Voadar
			[/filter]
			[primary_attack]
				name=fire breath
			[/primary_attack]
			hits=yes
			[facing]
				x,y=$George.temp_loc.x|,$George.temp_loc.y|
			[/facing]
		[/animate_unit]
		[terrain]
			x,y=$George.temp_loc.x|,$George.temp_loc.y|
			terrain=^Ebn
			layer=overlay
		[/terrain]
		[remove_item]
			x,y=$George.temp_loc.x|,$George.temp_loc.y|
		[/remove_item]
		{CLEAR_VARIABLE George.temp_loc}
	[/event]
	# also, we must manually place the images for the unlit braziers
	# so they can be hidden in fog. for this reason, 
	# the terrain doesn't automatically put any image down.
	[event]
		name=start
		[store_locations]
			terrain=*^Ybr
			variable=George.temp_locs
		[/store_locations]
		[while]
			[variable]
				name=George.temp_locs.length
				greater_than=0
			[/variable]
			[do]
				[item]
					x,y=$George.temp_locs[0].x|,$George.temp_locs[0].y|
					image=terrain/Brazier.png
					visible_in_fog=no
				[/item]
				{CLEAR_VARIABLE George.temp_locs[0]}
			[/do]
		[/while]
	[/event]
	
	########################################
	# Reactions to shown items begin here
	########################################
	
	[event]
		name=show_letter
		id=George_show_letter
		first_time_only=no
		{VOADAR_SHOW_ITEM_FILTER George}		
		{VOADAR_MESSAGE George (_"Letter from headquarters? Thank you for delivering this! It could be important.")}
		{VOADAR_MESSAGE George (_"<i>(Quickly reads the letter)</i> Ah, just some new uniform regulations. I'll have to... <i>(Goes a little pale)</i> ...have to bring this up with...")}
		{VOADAR_MESSAGE George (_"Oh, wait! I should notify headquarters that I received the order. <i>(Stamps the letter)</i> Would you take this back to the post office for me?")}
	[/event]
	
	[event]
		name=show_hat
		id=George_show_hat
		first_time_only=no
		{VOADAR_SHOW_ITEM_FILTER George}		
		{VOADAR_MESSAGE George (_"<i>(Goes a little pale)</i> That... Take that away from here! I'm as sorry as anyone about what happened to Cadameron, but we have no choice but to move on! Mark my words, don't go stirring up trouble about that!")}
		[fire_event]
			name=Voadar_responds
		[/fire_event]
		[switch]
			variable=Voadar.response
			[case]
				value=2,4
				{VOADAR_MESSAGE George (_"I mean it! I'm not saying anything else! I don't know anything else, really! Now put that thing away and forget about it!")}
			[/case]
		[/switch]
	[/event]
	
	[event]
		name=show_fish
		id=George_show_fish
		first_time_only=no
		{VOADAR_SHOW_ITEM_FILTER George}		
		{VOADAR_MESSAGE George (_"Ah, that's a fine fish you have there! Did you know fish are part of the standard military rations? It's because they're incredibly healthy! A few years ago I helped fight off large band of orcs who used $d|poisoned$b| throwing knives, but they never had a serious effect because of our excellent diet.")}
	[/event]
	
	[event]
		name=show_charm
		id=George_show_charm
		first_time_only=no
		{VOADAR_SHOW_ITEM_FILTER George}		
		{VOADAR_MESSAGE George (_"Ah, now that brings back memories! I used to be stationed near a large elf tribe, and several of them walked past my post almost daily. Elves from some tribes can't be trusted, but these ones were very friendly. They often wore pendants just like this one, and they always smelled like orchids... I believe that was Commodir and Tetaitiel's tribe, you know.")}
	[/event]
	
	
    
[/unit_type]
